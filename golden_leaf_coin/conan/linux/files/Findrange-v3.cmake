########## MACROS ###########################################################################
#############################################################################################

function(conan_message MESSAGE_OUTPUT)
    if (NOT CONAN_CMAKE_SILENT_OUTPUT)
        message(${ARGV${0}})
    endif ()
endfunction()


macro(conan_find_apple_frameworks FRAMEWORKS_FOUND FRAMEWORKS FRAMEWORKS_DIRS)
    if (APPLE)
        foreach (_FRAMEWORK ${FRAMEWORKS})
            # https://cmake.org/pipermail/cmake-developers/2017-August/030199.html
            find_library(CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND NAMES ${_FRAMEWORK} PATHS ${FRAMEWORKS_DIRS} CMAKE_FIND_ROOT_PATH_BOTH)
            if (CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND)
                list(APPEND ${FRAMEWORKS_FOUND} ${CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND})
            else ()
                message(FATAL_ERROR "Framework library ${_FRAMEWORK} not found in paths: ${FRAMEWORKS_DIRS}")
            endif ()
        endforeach ()
    endif ()
endmacro()


function(conan_package_library_targets libraries package_libdir deps out_libraries out_libraries_target build_type package_name)
    unset(_CONAN_ACTUAL_TARGETS CACHE)
    unset(_CONAN_FOUND_SYSTEM_LIBS CACHE)
    foreach (_LIBRARY_NAME ${libraries})
        find_library(CONAN_FOUND_LIBRARY NAMES ${_LIBRARY_NAME} PATHS ${package_libdir}
                NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
        if (CONAN_FOUND_LIBRARY)
            conan_message(STATUS "Library ${_LIBRARY_NAME} found ${CONAN_FOUND_LIBRARY}")
            list(APPEND _out_libraries ${CONAN_FOUND_LIBRARY})
            if (NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
                # Create a micro-target for each lib/a found
                string(REGEX REPLACE "[^A-Za-z0-9.+_-]" "_" _LIBRARY_NAME ${_LIBRARY_NAME})
                set(_LIB_NAME CONAN_LIB::${package_name}_${_LIBRARY_NAME} ${build_type})
                if (NOT TARGET ${_LIB_NAME})
                    # Create a micro-target for each lib/a found
                    add_library(${_LIB_NAME} UNKNOWN IMPORTED)
                    set_target_properties(${_LIB_NAME} PROPERTIES IMPORTED_LOCATION ${CONAN_FOUND_LIBRARY})
                    set(_CONAN_ACTUAL_TARGETS ${_CONAN_ACTUAL_TARGETS} ${_LIB_NAME})
                else ()
                    conan_message(STATUS "Skipping already existing target: ${_LIB_NAME}")
                endif ()
                list(APPEND _out_libraries_target ${_LIB_NAME})
            endif ()
            conan_message(STATUS "Found: ${CONAN_FOUND_LIBRARY}")
        else ()
            conan_message(STATUS "Library ${_LIBRARY_NAME} not found in package, might be system one")
            list(APPEND _out_libraries_target ${_LIBRARY_NAME})
            list(APPEND _out_libraries ${_LIBRARY_NAME})
            set(_CONAN_FOUND_SYSTEM_LIBS "${_CONAN_FOUND_SYSTEM_LIBS};${_LIBRARY_NAME}")
        endif ()
        unset(CONAN_FOUND_LIBRARY CACHE)
    endforeach ()

    if (NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
        # Add all dependencies to all targets
        string(REPLACE " " ";" deps_list "${deps}")
        foreach (_CONAN_ACTUAL_TARGET ${_CONAN_ACTUAL_TARGETS})
            set_property(TARGET ${_CONAN_ACTUAL_TARGET} PROPERTY INTERFACE_LINK_LIBRARIES "${_CONAN_FOUND_SYSTEM_LIBS};${deps_list}")
        endforeach ()
    endif ()

    set(${out_libraries} ${_out_libraries} PARENT_SCOPE)
    set(${out_libraries_target} ${_out_libraries_target} PARENT_SCOPE)
endfunction()


########### FOUND PACKAGE ###################################################################
#############################################################################################

include(FindPackageHandleStandardArgs)

conan_message(STATUS "Conan: Using autogenerated Findrange-v3.cmake")
set(range-v3_FOUND 1)
set(range-v3_VERSION "0.12.0")

find_package_handle_standard_args(range-v3 REQUIRED_VARS
        range-v3_VERSION VERSION_VAR range-v3_VERSION)
mark_as_advanced(range-v3_FOUND range-v3_VERSION)

set(range-v3_COMPONENTS range-v3::concepts range-v3::meta)

if (range-v3_FIND_COMPONENTS)
    foreach (_FIND_COMPONENT ${range-v3_FIND_COMPONENTS})
        list(FIND range-v3_COMPONENTS "range-v3::${_FIND_COMPONENT}" _index)
        if (${_index} EQUAL -1)
            conan_message(FATAL_ERROR "Conan: Component '${_FIND_COMPONENT}' NOT found in package 'range-v3'")
        else ()
            conan_message(STATUS "Conan: Component '${_FIND_COMPONENT}' found in package 'range-v3'")
        endif ()
    endforeach ()
endif ()

########### VARIABLES #######################################################################
#############################################################################################


set(range-v3_INCLUDE_DIRS "/home/andriy/.conan/data/range-v3/0.12.0/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include")
set(range-v3_INCLUDE_DIR "/home/andriy/.conan/data/range-v3/0.12.0/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include")
set(range-v3_INCLUDES "/home/andriy/.conan/data/range-v3/0.12.0/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include")
set(range-v3_RES_DIRS)
set(range-v3_DEFINITIONS)
set(range-v3_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
        )
set(range-v3_COMPILE_DEFINITIONS)
set(range-v3_COMPILE_OPTIONS_LIST "" "")
set(range-v3_COMPILE_OPTIONS_C "")
set(range-v3_COMPILE_OPTIONS_CXX "")
set(range-v3_LIBRARIES_TARGETS "") # Will be filled later, if CMake 3
set(range-v3_LIBRARIES "") # Will be filled later
set(range-v3_LIBS "") # Same as range-v3_LIBRARIES
set(range-v3_SYSTEM_LIBS)
set(range-v3_FRAMEWORK_DIRS)
set(range-v3_FRAMEWORKS)
set(range-v3_FRAMEWORKS_FOUND "") # Will be filled later
set(range-v3_BUILD_MODULES_PATHS)

conan_find_apple_frameworks(range-v3_FRAMEWORKS_FOUND "${range-v3_FRAMEWORKS}" "${range-v3_FRAMEWORK_DIRS}")

mark_as_advanced(range-v3_INCLUDE_DIRS
        range-v3_INCLUDE_DIR
        range-v3_INCLUDES
        range-v3_DEFINITIONS
        range-v3_LINKER_FLAGS_LIST
        range-v3_COMPILE_DEFINITIONS
        range-v3_COMPILE_OPTIONS_LIST
        range-v3_LIBRARIES
        range-v3_LIBS
        range-v3_LIBRARIES_TARGETS)

# Find the real .lib/.a and add them to range-v3_LIBS and range-v3_LIBRARY_LIST
set(range-v3_LIBRARY_LIST)
set(range-v3_LIB_DIRS)

# Gather all the libraries that should be linked to the targets (do not touch existing variables):
set(_range-v3_DEPENDENCIES "${range-v3_FRAMEWORKS_FOUND} ${range-v3_SYSTEM_LIBS} ")

conan_package_library_targets("${range-v3_LIBRARY_LIST}"  # libraries
        "${range-v3_LIB_DIRS}"      # package_libdir
        "${_range-v3_DEPENDENCIES}"  # deps
        range-v3_LIBRARIES            # out_libraries
        range-v3_LIBRARIES_TARGETS    # out_libraries_targets
        ""                          # build_type
        "range-v3")                                      # package_name

set(range-v3_LIBS ${range-v3_LIBRARIES})

foreach (_FRAMEWORK ${range-v3_FRAMEWORKS_FOUND})
    list(APPEND range-v3_LIBRARIES_TARGETS ${_FRAMEWORK})
    list(APPEND range-v3_LIBRARIES ${_FRAMEWORK})
endforeach ()

foreach (_SYSTEM_LIB ${range-v3_SYSTEM_LIBS})
    list(APPEND range-v3_LIBRARIES_TARGETS ${_SYSTEM_LIB})
    list(APPEND range-v3_LIBRARIES ${_SYSTEM_LIB})
endforeach ()

# We need to add our requirements too
set(range-v3_LIBRARIES_TARGETS "${range-v3_LIBRARIES_TARGETS};")
set(range-v3_LIBRARIES "${range-v3_LIBRARIES};")

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH})


########### COMPONENT meta VARIABLES #############################################

set(range-v3_meta_INCLUDE_DIRS "/home/andriy/.conan/data/range-v3/0.12.0/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include")
set(range-v3_meta_INCLUDE_DIR "/home/andriy/.conan/data/range-v3/0.12.0/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include")
set(range-v3_meta_INCLUDES "/home/andriy/.conan/data/range-v3/0.12.0/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include")
set(range-v3_meta_LIB_DIRS)
set(range-v3_meta_RES_DIRS)
set(range-v3_meta_DEFINITIONS)
set(range-v3_meta_COMPILE_DEFINITIONS)
set(range-v3_meta_COMPILE_OPTIONS_C "")
set(range-v3_meta_COMPILE_OPTIONS_CXX "")
set(range-v3_meta_LIBS)
set(range-v3_meta_SYSTEM_LIBS)
set(range-v3_meta_FRAMEWORK_DIRS)
set(range-v3_meta_FRAMEWORKS)
set(range-v3_meta_BUILD_MODULES_PATHS)
set(range-v3_meta_DEPENDENCIES)
set(range-v3_meta_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
        )

########### COMPONENT concepts VARIABLES #############################################

set(range-v3_concepts_INCLUDE_DIRS "/home/andriy/.conan/data/range-v3/0.12.0/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include")
set(range-v3_concepts_INCLUDE_DIR "/home/andriy/.conan/data/range-v3/0.12.0/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include")
set(range-v3_concepts_INCLUDES "/home/andriy/.conan/data/range-v3/0.12.0/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include")
set(range-v3_concepts_LIB_DIRS)
set(range-v3_concepts_RES_DIRS)
set(range-v3_concepts_DEFINITIONS)
set(range-v3_concepts_COMPILE_DEFINITIONS)
set(range-v3_concepts_COMPILE_OPTIONS_C "")
set(range-v3_concepts_COMPILE_OPTIONS_CXX "")
set(range-v3_concepts_LIBS)
set(range-v3_concepts_SYSTEM_LIBS)
set(range-v3_concepts_FRAMEWORK_DIRS)
set(range-v3_concepts_FRAMEWORKS)
set(range-v3_concepts_BUILD_MODULES_PATHS)
set(range-v3_concepts_DEPENDENCIES range-v3::meta)
set(range-v3_concepts_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
        )


########## FIND PACKAGE DEPENDENCY ##########################################################
#############################################################################################

include(CMakeFindDependencyMacro)


########## FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #######################################
#############################################################################################

########## COMPONENT meta FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(range-v3_meta_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(range-v3_meta_FRAMEWORKS_FOUND "${range-v3_meta_FRAMEWORKS}" "${range-v3_meta_FRAMEWORK_DIRS}")

set(range-v3_meta_LIB_TARGETS "")
set(range-v3_meta_NOT_USED "")
set(range-v3_meta_LIBS_FRAMEWORKS_DEPS ${range-v3_meta_FRAMEWORKS_FOUND} ${range-v3_meta_SYSTEM_LIBS} ${range-v3_meta_DEPENDENCIES})
conan_package_library_targets("${range-v3_meta_LIBS}"
        "${range-v3_meta_LIB_DIRS}"
        "${range-v3_meta_LIBS_FRAMEWORKS_DEPS}"
        range-v3_meta_NOT_USED
        range-v3_meta_LIB_TARGETS
        ""
        "range-v3_meta")

set(range-v3_meta_LINK_LIBS ${range-v3_meta_LIB_TARGETS} ${range-v3_meta_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH})

########## COMPONENT concepts FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(range-v3_concepts_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(range-v3_concepts_FRAMEWORKS_FOUND "${range-v3_concepts_FRAMEWORKS}" "${range-v3_concepts_FRAMEWORK_DIRS}")

set(range-v3_concepts_LIB_TARGETS "")
set(range-v3_concepts_NOT_USED "")
set(range-v3_concepts_LIBS_FRAMEWORKS_DEPS ${range-v3_concepts_FRAMEWORKS_FOUND} ${range-v3_concepts_SYSTEM_LIBS} ${range-v3_concepts_DEPENDENCIES})
conan_package_library_targets("${range-v3_concepts_LIBS}"
        "${range-v3_concepts_LIB_DIRS}"
        "${range-v3_concepts_LIBS_FRAMEWORKS_DEPS}"
        range-v3_concepts_NOT_USED
        range-v3_concepts_LIB_TARGETS
        ""
        "range-v3_concepts")

set(range-v3_concepts_LINK_LIBS ${range-v3_concepts_LIB_TARGETS} ${range-v3_concepts_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH})


########## TARGETS ##########################################################################
#############################################################################################

########## COMPONENT meta TARGET #################################################

if (NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if (NOT TARGET range-v3::meta)
        add_library(range-v3::meta INTERFACE IMPORTED)
        set_target_properties(range-v3::meta PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                "${range-v3_meta_INCLUDE_DIRS}")
        set_target_properties(range-v3::meta PROPERTIES INTERFACE_LINK_DIRECTORIES
                "${range-v3_meta_LIB_DIRS}")
        set_target_properties(range-v3::meta PROPERTIES INTERFACE_LINK_LIBRARIES
                "${range-v3_meta_LINK_LIBS};${range-v3_meta_LINKER_FLAGS_LIST}")
        set_target_properties(range-v3::meta PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                "${range-v3_meta_COMPILE_DEFINITIONS}")
        set_target_properties(range-v3::meta PROPERTIES INTERFACE_COMPILE_OPTIONS
                "${range-v3_meta_COMPILE_OPTIONS_C};${range-v3_meta_COMPILE_OPTIONS_CXX}")
    endif ()
endif ()

########## COMPONENT concepts TARGET #################################################

if (NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if (NOT TARGET range-v3::concepts)
        add_library(range-v3::concepts INTERFACE IMPORTED)
        set_target_properties(range-v3::concepts PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                "${range-v3_concepts_INCLUDE_DIRS}")
        set_target_properties(range-v3::concepts PROPERTIES INTERFACE_LINK_DIRECTORIES
                "${range-v3_concepts_LIB_DIRS}")
        set_target_properties(range-v3::concepts PROPERTIES INTERFACE_LINK_LIBRARIES
                "${range-v3_concepts_LINK_LIBS};${range-v3_concepts_LINKER_FLAGS_LIST}")
        set_target_properties(range-v3::concepts PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                "${range-v3_concepts_COMPILE_DEFINITIONS}")
        set_target_properties(range-v3::concepts PROPERTIES INTERFACE_COMPILE_OPTIONS
                "${range-v3_concepts_COMPILE_OPTIONS_C};${range-v3_concepts_COMPILE_OPTIONS_CXX}")
    endif ()
endif ()

########## GLOBAL TARGET ####################################################################

if (NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    if (NOT TARGET range-v3::range-v3)
        add_library(range-v3::range-v3 INTERFACE IMPORTED)
    endif ()
    set_property(TARGET range-v3::range-v3 APPEND PROPERTY
            INTERFACE_LINK_LIBRARIES "${range-v3_COMPONENTS}")
endif ()

########## BUILD MODULES ####################################################################
#############################################################################################
########## COMPONENT meta BUILD MODULES ##########################################

foreach (_BUILD_MODULE_PATH ${range-v3_meta_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach ()
########## COMPONENT concepts BUILD MODULES ##########################################

foreach (_BUILD_MODULE_PATH ${range-v3_concepts_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach ()
